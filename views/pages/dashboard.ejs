<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Wardrobe Dashboard</title>
  <link rel="stylesheet" href="css/dashboard.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Noto+Sans:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
<% layout('./layouts/boilerplate') -%>

</head>
<body>
  <div class="container">
    <div class="header">
      <h1 style="font-size: 36px;">Wardrobe Dashboard</h1>
    </div>
      


    <!-- Grid Layout -->
    <div class="grid-container">
      <!-- Left Section: Wardrobe Overview -->
      <div class="wardrobe-overview">
        <div class="dashboard-section dbs-overview">
          <h1 style="color: #333333e1; font-size: 24px;">Wardrobe Overview</h1>
          <h2 style="color: #3c3c3ce1; margin-bottom: 0px;">Hi, <%=data.user.username%></h2>
          <p style="margin-top: 1px;"><%=data.user.email %></p>
          <p><strong>Total Items:</strong> <%= data.totalItems %></p>
          <p><strong>Most Used Item:</strong> <%= data.mostUsedItem.name %> (Used <%= data.mostUsedItem.usage %> times)</p>
          <p><strong>Least Used Item:</strong> <%= data.leastUsedItem.name %> (Used <%= data.leastUsedItem.usage %> time)</p>
        </div>
      </div>

      <!-- Right Section: Category Breakdown and Sustainability Score -->
      <div class="right-section">
        <div class="right-grid">
          <div class="dashboard-section">
            <h2 style="color: #333333e1;"> Category Breakdown</h2>
            <canvas id="categoryChart" style="max-height: 200px;"></canvas>
          </div>

          <div class="dashboard-section">
            <h2 style="color: #333333e1;">Sustainability Score</h2>
            <canvas id="sustainabilityChart" style="max-height: 200px;"></canvas>
            <p>Your wardrobe's sustainability score is <strong><%= data.sustainabilityScore %> out of 100</strong>.</p>
            <div class ="progress-bar">
              <div class="outer">
                <div class="inner"></div>
              </div>
            </div>
          </div>
        </div>
        <div class="right-bottom-section">
          <div class="dashboard-section collection-overview">
            <h2>Wardrobe Collection</h2>
            <a href="#" class="button">Watches</a>
            <a href="#" class="button">Shirts</a>
            <a href="#" class="button">Pants</a>
            <a href="#" class="button">Tops</a>
            <a href="#" class="button">Shoes</a>
          </div>
      </div>
    </div>

  </div>

     <script>
  // Get the context of the canvas element for the category breakdown chart
  const ctx = document.getElementById('categoryChart').getContext('2d');
  const ptx = document.getElementById('sustainabilityChart').getContext('2d');

  // Data passed from the server
  const categoryData = <%- JSON.stringify(data.categoryBreakdown) %>;
  const sustainabilityScoreValue = <%= data.sustainabilityScore %>;

  // Prepare data for category chart
  const categoryLabels = Object.keys(categoryData);
  const categoryValues = Object.values(categoryData);
  
  // Create the category chart
  const categoryChart = new Chart(ctx, {
    type: 'pie',
    data: {
      labels: categoryLabels,
      datasets: [{
        data: categoryValues,
        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF'],
      }],
    },
    options: {
      responsive: true,
      plugins: {
        legend: {
          position: 'top',
        },
      },
    },
  });

  // Custom function to create the doughnut chart with shadows
  function drawDoughnutWithShadow(ptx, data) {
    const chart = new Chart(ptx, {
      type: 'doughnut', // Use doughnut type for a circular progress bar
      data: {
        labels: ['Used', 'Remaining'],
        datasets: [{
          data: data, // Score and remaining percentage
          backgroundColor: ['#4CAF50', '#E0E0E0'], // Green for used, grey for remaining
          borderWidth: 0, // No border
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        cutout: '70%',
        plugins: {
          legend: {
            display: false // Hide legend
          },
          tooltip: {
            enabled: false // Hide tooltips
          }
        },
        animation: {
          animateRotate: true,
          animateScale: true
        }
      }
    });

    // Draw shadows manually
    ptx.save();
    ptx.shadowColor = 'rgba(0, 0, 0, 0.3)'; // Shadow color
    ptx.shadowBlur = 10; // Shadow blur size
    ptx.shadowOffsetX = 5; // Horizontal shadow offset
    ptx.shadowOffsetY = 5; // Vertical shadow offset

    // Render the chart
    chart.render();

    // Restore context
    ptx.restore();
  }

  // Use the sustainability score for drawing
  drawDoughnutWithShadow(ptx, [sustainabilityScoreValue, 100 - sustainabilityScoreValue]);
</script>


</body>
</html>
